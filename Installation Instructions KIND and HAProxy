Create the K8 Cluster with 1 Master and 3 Worker nodes
======================================================
kind create cluster --config kind-example-config.yaml
Creating cluster "kind" ...
 âœ“ Ensuring node image (kindest/node:v1.30.0) ðŸ–¼
 âœ“ Preparing nodes ðŸ“¦ ðŸ“¦ ðŸ“¦ ðŸ“¦  
 âœ“ Writing configuration ðŸ“œ 
 âœ“ Starting control-plane ðŸ•¹ 
 âœ“ Installing CNI ðŸ”Œ 
 âœ“ Installing StorageClass ðŸ’¾ 
 âœ“ Joining worker nodes ðŸšœ 
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a nice day! ðŸ‘‹

Check the Kind Cluster
======================
root@ubuntuserver2204:/home/ubuntu# kubectl cluster-info --context kind-kind
Kubernetes control plane is running at https://127.0.0.1:32915
CoreDNS is running at https://127.0.0.1:32915/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
root@ubuntuserver2204:/home/ubuntu# 

Check my Juice Shop YAML Files
==============================
root@ubuntuserver2204:/home/ubuntu# more juice-shop-deployment.yaml 
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: juice-shop2
spec:
  template:
    metadata:
      labels:
        app: juice-shop2
    spec:
      containers:
      - name: juice-shop2
        image: bkimminich/juice-shop
  selector:
    matchLabels:
      app: juice-shop2
...
root@ubuntuserver2204:/home/ubuntu# more juice-shop-service.yaml 
---
kind: Service
apiVersion: v1
metadata:
  name: juice-shop2
spec:
  type: NodePort
  selector:
    app: juice-shop2
  ports:
  - name: http
    port: 8000
    targetPort: 3000
...
root@ubuntuserver2204:/home/ubuntu# 

Launch the Juice Shop Service
==========================
...
root@ubuntuserver2204:/home/ubuntu# kubectl create -f juice-shop-deployment.yaml 
deployment.apps/juice-shop2 created
root@ubuntuserver2204:/home/ubuntu# kubectl create -f juice-shop-service.yaml 
service/juice-shop2 created
root@ubuntuserver2204:/home/ubuntu# 

Check the juice-shop2 service is properly created
=================================================
Error from server (NotFound): services "juice-shop" not found
root@ubuntuserver2204:/home/ubuntu# kubectl get svc juice-shop2
NAME          TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
juice-shop2   NodePort   10.96.161.235   <none>        8000:30934/TCP   79s
root@ubuntuserver2204:/home/ubuntu# 

Check the end point is created
==============================
root@ubuntuserver2204:/home/ubuntu# kubectl get ep juice-shop2
NAME          ENDPOINTS         AGE
juice-shop2   10.244.1.2:3000   2m14s
root@ubuntuserver2204:/home/ubuntu# 


Check juice-shop2 Nodes and Pods are created (3 worker nodes are shown)
============================================
root@ubuntuserver2204:/home/ubuntu# kubectl get pod -o wide
NAME                           READY   STATUS    RESTARTS   AGE    IP           NODE           NOMINATED NODE   READINESS GATES
juice-shop2-7649b9bbb7-bknqx   1/1     Running   0          3m8s   10.244.1.2   kind-worker3   <none>           <none>
root@ubuntuserver2204:/home/ubuntu# kubectl get nodes -o wide
NAME                 STATUS   ROLES           AGE     VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE                         KERNEL-VERSION       CONTAINER-RUNTIME
kind-control-plane   Ready    control-plane   7m4s    v1.30.0   172.18.0.2    <none>        Debian GNU/Linux 12 (bookworm)   5.15.0-122-generic   containerd://1.7.15
kind-worker          Ready    <none>          6m37s   v1.30.0   172.18.0.5    <none>        Debian GNU/Linux 12 (bookworm)   5.15.0-122-generic   containerd://1.7.15
kind-worker2         Ready    <none>          6m37s   v1.30.0   172.18.0.4    <none>        Debian GNU/Linux 12 (bookworm)   5.15.0-122-generic   containerd://1.7.15
kind-worker3         Ready    <none>          6m37s   v1.30.0   172.18.0.3    <none>        Debian GNU/Linux 12 (bookworm)   5.15.0-122-generic   containerd://1.7.15
root@ubuntuserver2204:/home/ubuntu# 

Now we have to create a HAProxy front-end loadbalancer to load balance a browser client request to the juice-shop website that is served from the 3 worker nodes
================================================================================================================================================================
Configuring HA Proxy
====================
To start, letâ€™s install the HA Proxy package on the two servers: ha-proxy-001 and ha-proxy-002. For this we will perform the commands below on both machines.

# apt install -y haproxy

After the installation is complete, we will configure the HA Proxy. For that we need to edit the file /etc/haproxy/haproxy.cfg and add the lines below at the end of the file.

# nano /etc/haproxy/haproxy.cfg


Copy lines 119 to 131 and Add to the bottom of the existing haproxy.cfg file

frontend kubernetes
 mode tcp
 bind 192.168.101.135:6443
 option tcplog
 default_backend k8s-control-plane
 
backend k8s-control-plane
 mode tcp
 balance roundrobin
 option tcp-check
 server k8s-slave-001.lan.int 172.18.0.3:30934 check fall 3 rise 2
 server k8s-slave-002.lan.int 172.18.0.4:30934 check fall 3 rise 2
 server k8s-slave-003.lan.int 172.18.0.5:30934 check fall 3 rise 2

Edit the host file (add the following into the host file at /etc/hosts)
==================
172.18.0.3 k8s-slave-001.lan.int
172.18.0.4 k8s-slave-002.lan.int
172.18.0.5 k8s-slave-003.lan.int


Restart the service so that it loads the new settings.

# sudo systemctl restart haproxy
# sudo systemctl status haproxy

At this point, you may see some error message when you try to run haproxy, it is ok, just ignore it, after you install Keepalived, the haproxy will run normally.

Configuring Keepalived
======================
Now letâ€™s install Keepalived

# apt install -y keepalived

In order for Keepalived to work correctly, the ability to bind non-local IP addresses must be configured in the operating system. For that, letâ€™s run these commands: (!!! in the last successful install, i think i didn't run this)

sudo echo "net.ipv4.ip_nonlocal_bind=1" >> /etc/sysctl.conf

# Run the following command to check if update was applied (!!! in the last successful install, i think i didn't run this)
sudo sysctl -p

You should see the following response

net.ipv4.ip_nonlocal_bind = 1 # Is correct!

Check to see if the HAProxy Frontend Loadbalancer is working properly
=====================================================================
root@ubuntuserver2204:/home/ubuntu# netstat -ant
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 192.168.101.135:6443    0.0.0.0:*               LISTEN     

Line 162 shows that the HAProxy is running correctly, i.e. any client browser that enters http://192.168.101.135:6443 will be redirected by HAProxy to one of the worker nodes running the Juice-Shop website.

Now go to another VM machine that contains the client browser and enter http://192.168.101.135:6443, you should be able to see the juice-shop website.

Delete the K8 Cluster with 1 Master and 3 Worker nodes
======================================================
root@ubuntuserver2204:/home/ubuntu# kind delete cluster
Deleting cluster "kind" ...
Deleted nodes: ["kind-control-plane" "kind-worker2" "kind-worker" "kind-worker3"]
root@ubuntuserver2204:/home/ubuntu# 

